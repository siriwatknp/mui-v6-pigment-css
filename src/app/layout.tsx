import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { globalCss } from "@pigment-css/react";
import "@pigment-css/react/styles.css";

const inter = Inter({
  subsets: ["latin"],
  display: "swap",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

globalCss(({ theme }) => ({
  WebkitFontSmoothing: "antialiased", // Antialiasing.
  MozOsxFontSmoothing: "grayscale", // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%",
  "*, *::before, *::after": {
    boxSizing: "inherit",
  },
  "strong, b": {
    fontWeight: theme.typography.fontWeightBold,
  },
  body: {
    margin: 0, // Remove the margin in all browsers.
    color: (theme.vars || theme).palette.text.primary,
    ...theme.typography.body1,
    backgroundColor: (theme.vars || theme).palette.background.default,
    "@media print": {
      // Save printer ink.
      backgroundColor: (theme.vars || theme).palette.common.white,
    },
    // Add support for document.body.requestFullScreen().
    // Other elements, if background transparent, are not supported.
    "&::backdrop": {
      backgroundColor: (theme.vars || theme).palette.background.default,
    },
  },
  ...theme.applyStyles("dark", {
    colorScheme: "dark",
  }),
}));

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className={inter.className}>
      <body>{children}</body>
    </html>
  );
}
